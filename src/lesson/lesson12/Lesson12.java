package lesson.lesson12;

public class Lesson12 {
    public static void main(String[] args) {
        /**ЛЕКЦИЯ 12: ПОТОКИ*/
        //синхронный, асинхронный, параллельный

        //Синхронизация потоков:
        //Если есть переменная к которой обращаются несколько потоков,
        //то не обходимо запретить потокам обращаться к этой переменной,
        //пока другой поток не закончить с ней работу. Можно создать очередь.
        //synchronized (объект){код с объектом} // синхронизация для объекта
        //synchronized void doWork(){код} // синхронизация для метода

        //Создать поток можно двумя путями:
        //Реализовав интерфейс Runnable
        //Расширив класс Thread

        //Основные методы:
        //getName(): возвращает имя потока
        //setName(String name): устанавливает имя потока
        //getPriority(): возвращает приоритет потока
        //setPriority(int proirity): устанавливает приоритет потока.
        //isAlive(): возвращает true, если поток активен
        //isInterrupted(): возвращает true, если поток был прерван
        //join(): ожидает завершение потока
        //run(): определяет точку входа в поток
        //sleep(): приостанавливает поток на заданное количество миллисекунд
        //start(): запускает поток, вызывая его метод run()

        //Ожидание потоков
        //wait(); // ждать пока другой поток не разрешить продолжить
        //natify(); // разрешает случайному остановленному потоку запустится


    }
}
